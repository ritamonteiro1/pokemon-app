// Mocks generated by Mockito 5.1.0 from annotations
// in pokedex_app/test/modules/pokemon/presentation/favorite_pokemon_list/favorite_pokemon_list_store_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex_app/modules/pokemon/domain/model/pokemon/pokemon_model.dart'
    as _i4;
import 'package:pokedex_app/modules/pokemon/domain/use_case/get_favorite_pokemon_list_use_case.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GetFavoritePokemonListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFavoritePokemonListUseCase extends _i1.Mock
    implements _i2.GetFavoritePokemonListUseCase {
  MockGetFavoritePokemonListUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PokemonModel>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue:
                  Future<List<_i4.PokemonModel>>.value(<_i4.PokemonModel>[]))
          as _i3.Future<List<_i4.PokemonModel>>);
}
