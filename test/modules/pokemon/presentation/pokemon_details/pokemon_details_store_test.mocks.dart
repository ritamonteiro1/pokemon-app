// Mocks generated by Mockito 5.1.0 from annotations
// in pokedex_app/test/modules/pokemon/presentation/pokemon_details/pokemon_details_store_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex_app/modules/pokemon/domain/model/pokemon/pokemon_model.dart'
    as _i4;
import 'package:pokedex_app/modules/pokemon/domain/use_case/add_favorite_pokemon_use_case.dart'
    as _i2;
import 'package:pokedex_app/modules/pokemon/domain/use_case/remove_favorite_pokemon_use_case.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AddFavoritePokemonUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddFavoritePokemonUseCase extends _i1.Mock
    implements _i2.AddFavoritePokemonUseCase {
  MockAddFavoritePokemonUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(_i4.PokemonModel? pokemonModel) =>
      (super.noSuchMethod(Invocation.method(#call, [pokemonModel]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [RemoveFavoritePokemonUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFavoritePokemonUseCase extends _i1.Mock
    implements _i5.RemoveFavoritePokemonUseCase {
  MockRemoveFavoritePokemonUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(_i4.PokemonModel? pokemonModel) =>
      (super.noSuchMethod(Invocation.method(#call, [pokemonModel]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
